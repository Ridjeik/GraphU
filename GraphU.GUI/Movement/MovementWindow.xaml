<Window x:Class="GraphU.Movement.MovementWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GraphU"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:sys = "clr-namespace:System;assembly=mscorlib"
        xmlns:scottPlot="clr-namespace:ScottPlot;assembly=ScottPlot.WPF"
        mc:Ignorable="d"
        Title="Рух"
        SizeToContent="WidthAndHeight" FontSize="16" ResizeMode="NoResize">
    <Window.Resources>
        <Style TargetType="Button">
            <Setter Property="Padding" Value="20, 10"></Setter>
            <Setter Property="FontSize" Value="16"></Setter>
        </Style>
        <Style TargetType="Label">
            <Setter Property="FontSize" Value="20"></Setter>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="FontSize" Value="20"></Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            
            <Button Name="BackButton" Click="BackToMain" Width="{Binding ElementName=BackButton, Path=Height}">&lt;-</Button>
            <Button Grid.Column="1" Click="OpenFractalWindow" >Фрактали</Button>
            <Button Grid.Column="2" Click="OpenColorsWindow">Кольори</Button>
            <Button Grid.Column="3" Click="OpenMovementWindow" IsEnabled="False">Рух</Button>
        </Grid>
    <StackPanel Grid.Row="1" Orientation="Horizontal">
        <scottPlot:WpfPlot x:Name="MainPlot" Width="500" Height="500"/>
        <DockPanel LastChildFill="False" Margin="10,30, 30, 30">
            <Button DockPanel.Dock="Top" Margin="0, 0, 20, 20" Padding="10, 10" Background="#D4D1E5" FontSize="20" Grid.Column="1" Click="ShowNextLessonPopup" Name="InfoButton" HorizontalAlignment="Right" >
                <Button.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="7"/>
                    </Style>
                </Button.Resources>
                Що тут відбувається?
            </Button>
            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                <Label>Координати вершин:</Label>
                <Label>(</Label>
                <Border BorderThickness="0,0,0,1">
                    <TextBox Name="Box1" Text="{Binding X1}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                             MinWidth="20" />
                </Border>
                <Label>;</Label>
                <Border BorderThickness="0,0,0,1">
                    <TextBox Name="Box2" Text="{Binding Y1}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Width="20"></TextBox>
                </Border>
                <Label>)</Label>
                <Label>(</Label>
                <Border BorderThickness="0,0,0,1">
                    <TextBox Name="Box3" Text="{Binding X2}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Width="20" ></TextBox>
                </Border>
                <Label>;</Label>
                <Border BorderThickness="0,0,0,1">
                    <TextBox Name="Box4" Text="{Binding Y2}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Width="20"></TextBox>
                </Border>
                <Label>)</Label>
                <Label>(</Label>
                <Border BorderThickness="0,0,0,1">
                    <TextBox Name="Box5" Text="{Binding X3}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Width="20" ></TextBox>
                </Border>
                <Label>;</Label>
                <Border BorderThickness="0,0,0,1">
                    <TextBox Name="Box6" Text="{Binding Y3}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Width="20"></TextBox>
                </Border>
                <Label>)</Label>
                <Label>(</Label>
                <Border BorderThickness="0,0,0,1">
                    <TextBox Name="Box7" Text="{Binding X4, Mode=OneWay}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Width="20" IsReadOnly="True"></TextBox>
                </Border>
                <Label>;</Label>
                <Border BorderThickness="0,0,0,1">
                    <TextBox Name="Box8" Text="{Binding Y4, Mode=OneWay}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Width="20" IsReadOnly="True"></TextBox>
                </Border>
                <Label>)</Label>
                
            </StackPanel>
            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                <Label>Кут повороту:</Label>

                <Border BorderThickness="0,0,0,1">
                    <TextBox Text="{Binding Angle}" Name="Box9" Width="40" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"></TextBox>
                </Border>
                <Label>°</Label>
                
            </StackPanel>
            
            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                <Label>Висота підйому:</Label>

                <Border BorderThickness="0,0,0,1">
                    <TextBox Text="{Binding MoveHeight}" Name="Box10" Width="40" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"></TextBox>
                </Border>
                <Label>(одиниць)</Label>
                
            </StackPanel>
            
            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                <Label>Швидкість:</Label>

                <Border BorderThickness="0,0,0,1">
                    <TextBox Text="{Binding Speed}" Name="Box11" Width="40" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"></TextBox>
                </Border>
                <Label>(одиниці за секунду)</Label>
                
            </StackPanel>
            
            <StackPanel FlowDirection="RightToLeft" DockPanel.Dock="Bottom" Orientation="Horizontal">
                <Button Click="StartAnimation" Background="#8C9FFF" Padding="20, 10" Content="Почати анімацію">
                    <Button.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="7"/>
                        </Style>
                    </Button.Resources>
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=Box1, Path=(Validation.HasError)}" Value="False"/>
                                        <Condition Binding="{Binding ElementName=Box2, Path=(Validation.HasError)}" Value="False"/>
                                        <Condition Binding="{Binding ElementName=Box3, Path=(Validation.HasError)}" Value="False"/>
                                        <Condition Binding="{Binding ElementName=Box4, Path=(Validation.HasError)}" Value="False"/>
                                        <Condition Binding="{Binding ElementName=Box5, Path=(Validation.HasError)}" Value="False"/>
                                        <Condition Binding="{Binding ElementName=Box6, Path=(Validation.HasError)}" Value="False"/>
                                        <Condition Binding="{Binding ElementName=Box7, Path=(Validation.HasError)}" Value="False"/>
                                        <Condition Binding="{Binding ElementName=Box8, Path=(Validation.HasError)}" Value="False"/>
                                        <Condition Binding="{Binding ElementName=Box9, Path=(Validation.HasError)}" Value="False"/>
                                        <Condition Binding="{Binding ElementName=Box10, Path=(Validation.HasError)}" Value="False"/>
                                        <Condition Binding="{Binding ElementName=Box11, Path=(Validation.HasError)}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Background="#D4D1E5" Margin="10,0" IsEnabled="False" Name="StopAnimationButton" Click="StopAnimation">
                    <Button.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="7"/>
                        </Style>
                    </Button.Resources>
                    Зупинити анімацію
                </Button>
                <Button Background="#D4D1E5" Margin="10,0" Click="SaveImage">
                    <Button.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="7"/>
                        </Style>
                    </Button.Resources>
                    Зберегти зображення
                </Button>
            </StackPanel>
        </DockPanel>
    </StackPanel>
        
        <Popup Name="LessonPopup" PlacementTarget="{Binding ElementName=DockPanel}" Placement="Absolute" AllowsTransparency="True" HorizontalOffset="1700" VerticalOffset="100" IsOpen="False" >
            <DockPanel Background="Transparent" LastChildFill="False">
                <Image DockPanel.Dock="Right" Source="/Images/graphy.png" Width="300"></Image>
                <Border CornerRadius="15" Name="Lesson1" IsEnabled="False" Visibility="Collapsed"  Background="WhiteSmoke" Padding="10" BorderThickness="2" BorderBrush="Black" VerticalAlignment="Top">
                    <StackPanel Orientation="Vertical">
                        <TextBlock FontWeight="Bold" FontSize="24" HorizontalAlignment="Center">Фрактали</TextBlock>
                        <TextBlock TextWrapping="Wrap" FontSize="20">
                            Привіт! Мене звати Фракті! <LineBreak/>
                            У цій секції програми моя задача розказати тобі про рух та перетворення. <LineBreak/>
                            Чи хотів би ти про них дізнатися?
                        </TextBlock>
                        <StackPanel HorizontalAlignment="Center" Margin="0, 10, 0, 0" Orientation="Horizontal">
                            <Button Background="#8C9FFF" Margin="10, 0" Click="ShowNextLessonPopup">
                                    <Button.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" Value="7"/>
                                        </Style>
                                    </Button.Resources>
                        
                                Так, звісно!
                            </Button>
                            <Button Background="#D4D1E5" Click="CloseLessonPopup">
                                <Button.Resources>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="CornerRadius" Value="7"/>
                                    </Style>
                                </Button.Resources>
                                Вибач, але ні
                            </Button>
                        </StackPanel>
                    </StackPanel>
                </Border>
                <Border CornerRadius="15" Name="Lesson2" IsEnabled="False" Visibility="Collapsed" Background="WhiteSmoke" Padding="10" BorderThickness="2" BorderBrush="Black" VerticalAlignment="Top">
                    <StackPanel Orientation="Vertical">
                        <TextBlock Name="Lesson2TextBlock" TextWrapping="Wrap" FontSize="20">
                            Хочеш вір, а хочеш ні, але будь-який рух <LineBreak />
                            на площині, який не деформує фігуру можна описати 3 перетвореннями<LineBreak />
                            Про них я розкажу далі! <LineBreak />
                        </TextBlock>
                        <StackPanel HorizontalAlignment="Center" Margin="0, 10, 0, 0" Orientation="Horizontal">
                            <Button Background="#8C9FFF" Margin="10, 0" Click="ShowNextLessonPopup">
                                <Button.Resources>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="CornerRadius" Value="7"/>
                                    </Style>
                                </Button.Resources>
                                Добре, давай!
                            </Button>
                            <Button Background="#D4D1E5" Click="CloseLessonPopup">
                                <Button.Resources>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="CornerRadius" Value="7"/>
                                    </Style>
                                </Button.Resources>
                                Вибач, але мушу йти
                            </Button>
                        </StackPanel>
                    </StackPanel>
                </Border>
                <Border CornerRadius="15" Name="Lesson3" IsEnabled="False" Visibility="Collapsed" Background="WhiteSmoke" Padding="10" BorderThickness="2" BorderBrush="Black" VerticalAlignment="Top">
                    <StackPanel Orientation="Vertical">
                        <TextBlock TextWrapping="Wrap" FontSize="20">
                            Першим таким є паралельне перенесення.<LineBreak/>
                            Таке перетворення виникає, якщо ти візьмеш будь-який об'єкт<LineBreak/>
                            і почнеш сунути його в будь-яку сторону, не повертаючи <LineBreak/>
                            
                        </TextBlock>
                        <StackPanel HorizontalAlignment="Center" Margin="0, 10, 0, 0" Orientation="Horizontal">
                            <Button Background="#8C9FFF" Margin="10, 0" Click="ShowNextLessonPopup">
                                <Button.Resources>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="CornerRadius" Value="7"/>
                                    </Style>
                                </Button.Resources>
                                Так, зрозумів!
                            </Button>
                            <Button Background="#D4D1E5" Click="CloseLessonPopup">
                                <Button.Resources>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="CornerRadius" Value="7"/>
                                    </Style>
                                </Button.Resources>
                                Вибач, але мушу йти
                            </Button>
                        </StackPanel>
                    </StackPanel>
                </Border>
                <Border CornerRadius="15" Name="Lesson4" IsEnabled="False" Visibility="Collapsed" Background="WhiteSmoke" Padding="10" BorderThickness="2" BorderBrush="Black" VerticalAlignment="Top">
                    <StackPanel Orientation="Vertical">
                        <TextBlock TextWrapping="Wrap" FontSize="20">
                            Наступне переторення - поворот<LineBreak/>
                            Думаю, тут назва говорить сама за себе :)<LineBreak/>
                        </TextBlock>
                        
                        <StackPanel HorizontalAlignment="Center" Margin="0, 10, 0, 0" Orientation="Horizontal">
                            <Button Background="#8C9FFF" Margin="10, 0" Click="ShowNextLessonPopup">
                                <Button.Resources>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="CornerRadius" Value="7"/>
                                    </Style>
                                </Button.Resources>
                                Так, зрозумів!
                            </Button>
                            <Button Background="#D4D1E5" Click="CloseLessonPopup">
                                <Button.Resources>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="CornerRadius" Value="7"/>
                                    </Style>
                                </Button.Resources>
                                Вибач, але мушу йти
                            </Button>
                        </StackPanel>
                    </StackPanel>
                </Border>
                <Border CornerRadius="15" Name="Lesson5" IsEnabled="False" Visibility="Collapsed" Background="WhiteSmoke" Padding="10" BorderThickness="2" BorderBrush="Black" VerticalAlignment="Top">
                    <StackPanel Orientation="Vertical">
                        <TextBlock TextWrapping="Wrap" FontSize="20">
                            І останнє: розтягнення. <LineBreak/>
                            Це таке перетворення, коли ти розтягуєш об'єкт в кожну сторону. <LineBreak/>
                            В програмі ти побачиш комбінацію повороту і паралельного перенесення, <LineBreak/>
                            Сподіваюсь тобі буде цікаво!
                        </TextBlock>
                        
                        <StackPanel HorizontalAlignment="Center" Margin="0, 10, 0, 0" Orientation="Horizontal">
                            <Button Background="#8C9FFF" Margin="10, 0" Click="CloseLessonPopup">
                                <Button.Resources>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="CornerRadius" Value="7"/>
                                    </Style>
                                </Button.Resources>
                        
                                Дякую, бувай!
                            </Button>
                        </StackPanel>
                    </StackPanel>
                </Border>
            </DockPanel>
                
                
        </Popup>
        
    </Grid>

</Window>
